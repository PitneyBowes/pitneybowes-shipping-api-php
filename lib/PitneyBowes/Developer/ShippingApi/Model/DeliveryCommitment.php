<?php
/**
 * DeliveryCommitment
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DeliveryCommitment Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DeliveryCommitment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'DeliveryCommitment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additional_details' => 'string',
        'estimated_delivery_date_time' => 'string',
        'guarantee' => 'string',
        'max_estimated_number_of_days' => 'string',
        'min_estimated_number_of_days' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'additional_details' => null,
        'estimated_delivery_date_time' => null,
        'guarantee' => null,
        'max_estimated_number_of_days' => null,
        'min_estimated_number_of_days' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additional_details' => 'additionalDetails',
        'estimated_delivery_date_time' => 'estimatedDeliveryDateTime',
        'guarantee' => 'guarantee',
        'max_estimated_number_of_days' => 'maxEstimatedNumberOfDays',
        'min_estimated_number_of_days' => 'minEstimatedNumberOfDays'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additional_details' => 'setAdditionalDetails',
        'estimated_delivery_date_time' => 'setEstimatedDeliveryDateTime',
        'guarantee' => 'setGuarantee',
        'max_estimated_number_of_days' => 'setMaxEstimatedNumberOfDays',
        'min_estimated_number_of_days' => 'setMinEstimatedNumberOfDays'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additional_details' => 'getAdditionalDetails',
        'estimated_delivery_date_time' => 'getEstimatedDeliveryDateTime',
        'guarantee' => 'getGuarantee',
        'max_estimated_number_of_days' => 'getMaxEstimatedNumberOfDays',
        'min_estimated_number_of_days' => 'getMinEstimatedNumberOfDays'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additional_details'] = isset($data['additional_details']) ? $data['additional_details'] : null;
        $this->container['estimated_delivery_date_time'] = isset($data['estimated_delivery_date_time']) ? $data['estimated_delivery_date_time'] : null;
        $this->container['guarantee'] = isset($data['guarantee']) ? $data['guarantee'] : null;
        $this->container['max_estimated_number_of_days'] = isset($data['max_estimated_number_of_days']) ? $data['max_estimated_number_of_days'] : null;
        $this->container['min_estimated_number_of_days'] = isset($data['min_estimated_number_of_days']) ? $data['min_estimated_number_of_days'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additional_details
     *
     * @return string|null
     */
    public function getAdditionalDetails()
    {
        return $this->container['additional_details'];
    }

    /**
     * Sets additional_details
     *
     * @param string|null $additional_details additional_details
     *
     * @return $this
     */
    public function setAdditionalDetails($additional_details)
    {
        $this->container['additional_details'] = $additional_details;

        return $this;
    }

    /**
     * Gets estimated_delivery_date_time
     *
     * @return string|null
     */
    public function getEstimatedDeliveryDateTime()
    {
        return $this->container['estimated_delivery_date_time'];
    }

    /**
     * Sets estimated_delivery_date_time
     *
     * @param string|null $estimated_delivery_date_time estimated_delivery_date_time
     *
     * @return $this
     */
    public function setEstimatedDeliveryDateTime($estimated_delivery_date_time)
    {
        $this->container['estimated_delivery_date_time'] = $estimated_delivery_date_time;

        return $this;
    }

    /**
     * Gets guarantee
     *
     * @return string|null
     */
    public function getGuarantee()
    {
        return $this->container['guarantee'];
    }

    /**
     * Sets guarantee
     *
     * @param string|null $guarantee guarantee
     *
     * @return $this
     */
    public function setGuarantee($guarantee)
    {
        $this->container['guarantee'] = $guarantee;

        return $this;
    }

    /**
     * Gets max_estimated_number_of_days
     *
     * @return string|null
     */
    public function getMaxEstimatedNumberOfDays()
    {
        return $this->container['max_estimated_number_of_days'];
    }

    /**
     * Sets max_estimated_number_of_days
     *
     * @param string|null $max_estimated_number_of_days max_estimated_number_of_days
     *
     * @return $this
     */
    public function setMaxEstimatedNumberOfDays($max_estimated_number_of_days)
    {
        $this->container['max_estimated_number_of_days'] = $max_estimated_number_of_days;

        return $this;
    }

    /**
     * Gets min_estimated_number_of_days
     *
     * @return string|null
     */
    public function getMinEstimatedNumberOfDays()
    {
        return $this->container['min_estimated_number_of_days'];
    }

    /**
     * Sets min_estimated_number_of_days
     *
     * @param string|null $min_estimated_number_of_days min_estimated_number_of_days
     *
     * @return $this
     */
    public function setMinEstimatedNumberOfDays($min_estimated_number_of_days)
    {
        $this->container['min_estimated_number_of_days'] = $min_estimated_number_of_days;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


