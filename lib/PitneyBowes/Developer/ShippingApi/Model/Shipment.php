<?php
/**
 * Shipment
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Shipment Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Shipment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Shipment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additional_addresses' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\AdditionalAddress[]',
        'alt_return_address' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address',
        'carrier_payments' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierPayment[]',
        'customs' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Customs',
        'documents' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Document[]',
        'from_address' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address',
        'hazmat_details' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\HazmatDetails',
        'parcel' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parcel',
        'parcel_tracking_number' => 'string',
        'rates' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Rate[]',
        'references' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parameter[]',
        'shipment_id' => 'string',
        'shipment_options' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parameter[]',
        'shipment_type' => 'string',
        'sold_to_address' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address',
        'to_address' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'additional_addresses' => null,
        'alt_return_address' => null,
        'carrier_payments' => null,
        'customs' => null,
        'documents' => null,
        'from_address' => null,
        'hazmat_details' => null,
        'parcel' => null,
        'parcel_tracking_number' => null,
        'rates' => null,
        'references' => null,
        'shipment_id' => null,
        'shipment_options' => null,
        'shipment_type' => null,
        'sold_to_address' => null,
        'to_address' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additional_addresses' => 'additionalAddresses',
        'alt_return_address' => 'altReturnAddress',
        'carrier_payments' => 'carrierPayments',
        'customs' => 'customs',
        'documents' => 'documents',
        'from_address' => 'fromAddress',
        'hazmat_details' => 'hazmatDetails',
        'parcel' => 'parcel',
        'parcel_tracking_number' => 'parcelTrackingNumber',
        'rates' => 'rates',
        'references' => 'references',
        'shipment_id' => 'shipmentId',
        'shipment_options' => 'shipmentOptions',
        'shipment_type' => 'shipmentType',
        'sold_to_address' => 'soldToAddress',
        'to_address' => 'toAddress'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additional_addresses' => 'setAdditionalAddresses',
        'alt_return_address' => 'setAltReturnAddress',
        'carrier_payments' => 'setCarrierPayments',
        'customs' => 'setCustoms',
        'documents' => 'setDocuments',
        'from_address' => 'setFromAddress',
        'hazmat_details' => 'setHazmatDetails',
        'parcel' => 'setParcel',
        'parcel_tracking_number' => 'setParcelTrackingNumber',
        'rates' => 'setRates',
        'references' => 'setReferences',
        'shipment_id' => 'setShipmentId',
        'shipment_options' => 'setShipmentOptions',
        'shipment_type' => 'setShipmentType',
        'sold_to_address' => 'setSoldToAddress',
        'to_address' => 'setToAddress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additional_addresses' => 'getAdditionalAddresses',
        'alt_return_address' => 'getAltReturnAddress',
        'carrier_payments' => 'getCarrierPayments',
        'customs' => 'getCustoms',
        'documents' => 'getDocuments',
        'from_address' => 'getFromAddress',
        'hazmat_details' => 'getHazmatDetails',
        'parcel' => 'getParcel',
        'parcel_tracking_number' => 'getParcelTrackingNumber',
        'rates' => 'getRates',
        'references' => 'getReferences',
        'shipment_id' => 'getShipmentId',
        'shipment_options' => 'getShipmentOptions',
        'shipment_type' => 'getShipmentType',
        'sold_to_address' => 'getSoldToAddress',
        'to_address' => 'getToAddress'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const SHIPMENT_TYPE_OUTBOUND = 'OUTBOUND';
    const SHIPMENT_TYPE__RETURN = 'RETURN';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getShipmentTypeAllowableValues()
    {
        return [
            self::SHIPMENT_TYPE_OUTBOUND,
            self::SHIPMENT_TYPE__RETURN,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additional_addresses'] = isset($data['additional_addresses']) ? $data['additional_addresses'] : null;
        $this->container['alt_return_address'] = isset($data['alt_return_address']) ? $data['alt_return_address'] : null;
        $this->container['carrier_payments'] = isset($data['carrier_payments']) ? $data['carrier_payments'] : null;
        $this->container['customs'] = isset($data['customs']) ? $data['customs'] : null;
        $this->container['documents'] = isset($data['documents']) ? $data['documents'] : null;
        $this->container['from_address'] = isset($data['from_address']) ? $data['from_address'] : null;
        $this->container['hazmat_details'] = isset($data['hazmat_details']) ? $data['hazmat_details'] : null;
        $this->container['parcel'] = isset($data['parcel']) ? $data['parcel'] : null;
        $this->container['parcel_tracking_number'] = isset($data['parcel_tracking_number']) ? $data['parcel_tracking_number'] : null;
        $this->container['rates'] = isset($data['rates']) ? $data['rates'] : null;
        $this->container['references'] = isset($data['references']) ? $data['references'] : null;
        $this->container['shipment_id'] = isset($data['shipment_id']) ? $data['shipment_id'] : null;
        $this->container['shipment_options'] = isset($data['shipment_options']) ? $data['shipment_options'] : null;
        $this->container['shipment_type'] = isset($data['shipment_type']) ? $data['shipment_type'] : null;
        $this->container['sold_to_address'] = isset($data['sold_to_address']) ? $data['sold_to_address'] : null;
        $this->container['to_address'] = isset($data['to_address']) ? $data['to_address'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['from_address'] === null) {
            $invalidProperties[] = "'from_address' can't be null";
        }
        if ($this->container['parcel'] === null) {
            $invalidProperties[] = "'parcel' can't be null";
        }
        if ($this->container['rates'] === null) {
            $invalidProperties[] = "'rates' can't be null";
        }
        $allowedValues = $this->getShipmentTypeAllowableValues();
        if (!is_null($this->container['shipment_type']) && !in_array($this->container['shipment_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'shipment_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['to_address'] === null) {
            $invalidProperties[] = "'to_address' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additional_addresses
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\AdditionalAddress[]|null
     */
    public function getAdditionalAddresses()
    {
        return $this->container['additional_addresses'];
    }

    /**
     * Sets additional_addresses
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\AdditionalAddress[]|null $additional_addresses additional_addresses
     *
     * @return $this
     */
    public function setAdditionalAddresses($additional_addresses)
    {
        $this->container['additional_addresses'] = $additional_addresses;

        return $this;
    }

    /**
     * Gets alt_return_address
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address|null
     */
    public function getAltReturnAddress()
    {
        return $this->container['alt_return_address'];
    }

    /**
     * Sets alt_return_address
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address|null $alt_return_address alt_return_address
     *
     * @return $this
     */
    public function setAltReturnAddress($alt_return_address)
    {
        $this->container['alt_return_address'] = $alt_return_address;

        return $this;
    }

    /**
     * Gets carrier_payments
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierPayment[]|null
     */
    public function getCarrierPayments()
    {
        return $this->container['carrier_payments'];
    }

    /**
     * Sets carrier_payments
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierPayment[]|null $carrier_payments carrier_payments
     *
     * @return $this
     */
    public function setCarrierPayments($carrier_payments)
    {
        $this->container['carrier_payments'] = $carrier_payments;

        return $this;
    }

    /**
     * Gets customs
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Customs|null
     */
    public function getCustoms()
    {
        return $this->container['customs'];
    }

    /**
     * Sets customs
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Customs|null $customs customs
     *
     * @return $this
     */
    public function setCustoms($customs)
    {
        $this->container['customs'] = $customs;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Document[]|null
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Document[]|null $documents documents
     *
     * @return $this
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }

    /**
     * Gets from_address
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address
     */
    public function getFromAddress()
    {
        return $this->container['from_address'];
    }

    /**
     * Sets from_address
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address $from_address from_address
     *
     * @return $this
     */
    public function setFromAddress($from_address)
    {
        $this->container['from_address'] = $from_address;

        return $this;
    }

    /**
     * Gets hazmat_details
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\HazmatDetails|null
     */
    public function getHazmatDetails()
    {
        return $this->container['hazmat_details'];
    }

    /**
     * Sets hazmat_details
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\HazmatDetails|null $hazmat_details hazmat_details
     *
     * @return $this
     */
    public function setHazmatDetails($hazmat_details)
    {
        $this->container['hazmat_details'] = $hazmat_details;

        return $this;
    }

    /**
     * Gets parcel
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parcel
     */
    public function getParcel()
    {
        return $this->container['parcel'];
    }

    /**
     * Sets parcel
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parcel $parcel parcel
     *
     * @return $this
     */
    public function setParcel($parcel)
    {
        $this->container['parcel'] = $parcel;

        return $this;
    }

    /**
     * Gets parcel_tracking_number
     *
     * @return string|null
     */
    public function getParcelTrackingNumber()
    {
        return $this->container['parcel_tracking_number'];
    }

    /**
     * Sets parcel_tracking_number
     *
     * @param string|null $parcel_tracking_number parcel_tracking_number
     *
     * @return $this
     */
    public function setParcelTrackingNumber($parcel_tracking_number)
    {
        $this->container['parcel_tracking_number'] = $parcel_tracking_number;

        return $this;
    }

    /**
     * Gets rates
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Rate[]
     */
    public function getRates()
    {
        return $this->container['rates'];
    }

    /**
     * Sets rates
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Rate[] $rates rates
     *
     * @return $this
     */
    public function setRates($rates)
    {
        $this->container['rates'] = $rates;

        return $this;
    }

    /**
     * Gets references
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parameter[]|null
     */
    public function getReferences()
    {
        return $this->container['references'];
    }

    /**
     * Sets references
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parameter[]|null $references references
     *
     * @return $this
     */
    public function setReferences($references)
    {
        $this->container['references'] = $references;

        return $this;
    }

    /**
     * Gets shipment_id
     *
     * @return string|null
     */
    public function getShipmentId()
    {
        return $this->container['shipment_id'];
    }

    /**
     * Sets shipment_id
     *
     * @param string|null $shipment_id shipment_id
     *
     * @return $this
     */
    public function setShipmentId($shipment_id)
    {
        $this->container['shipment_id'] = $shipment_id;

        return $this;
    }

    /**
     * Gets shipment_options
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parameter[]|null
     */
    public function getShipmentOptions()
    {
        return $this->container['shipment_options'];
    }

    /**
     * Sets shipment_options
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Parameter[]|null $shipment_options shipment_options
     *
     * @return $this
     */
    public function setShipmentOptions($shipment_options)
    {
        $this->container['shipment_options'] = $shipment_options;

        return $this;
    }

    /**
     * Gets shipment_type
     *
     * @return string|null
     */
    public function getShipmentType()
    {
        return $this->container['shipment_type'];
    }

    /**
     * Sets shipment_type
     *
     * @param string|null $shipment_type shipment_type
     *
     * @return $this
     */
    public function setShipmentType($shipment_type)
    {
        $allowedValues = $this->getShipmentTypeAllowableValues();
        if (!is_null($shipment_type) && !in_array($shipment_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'shipment_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['shipment_type'] = $shipment_type;

        return $this;
    }

    /**
     * Gets sold_to_address
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address|null
     */
    public function getSoldToAddress()
    {
        return $this->container['sold_to_address'];
    }

    /**
     * Sets sold_to_address
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address|null $sold_to_address sold_to_address
     *
     * @return $this
     */
    public function setSoldToAddress($sold_to_address)
    {
        $this->container['sold_to_address'] = $sold_to_address;

        return $this;
    }

    /**
     * Gets to_address
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address
     */
    public function getToAddress()
    {
        return $this->container['to_address'];
    }

    /**
     * Sets to_address
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address $to_address to_address
     *
     * @return $this
     */
    public function setToAddress($to_address)
    {
        $this->container['to_address'] = $to_address;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


