<?php
/**
 * CrossBorderQuotesResponseQuoteLines
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CrossBorderQuotesResponseQuoteLines Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CrossBorderQuotesResponseQuoteLines implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CrossBorderQuotesResponse_quoteLines';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'line_id' => 'string',
        'item_id' => 'string',
        'quote_line_id' => 'string',
        'quantity' => 'int',
        'unit_rates' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CrossBorderQuotesResponseUnitRates',
        'line_rates' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CrossBorderQuotesResponseLineRates'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'line_id' => null,
        'item_id' => null,
        'quote_line_id' => null,
        'quantity' => null,
        'unit_rates' => null,
        'line_rates' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'line_id' => 'lineId',
        'item_id' => 'itemId',
        'quote_line_id' => 'quoteLineId',
        'quantity' => 'quantity',
        'unit_rates' => 'unitRates',
        'line_rates' => 'lineRates'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'line_id' => 'setLineId',
        'item_id' => 'setItemId',
        'quote_line_id' => 'setQuoteLineId',
        'quantity' => 'setQuantity',
        'unit_rates' => 'setUnitRates',
        'line_rates' => 'setLineRates'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'line_id' => 'getLineId',
        'item_id' => 'getItemId',
        'quote_line_id' => 'getQuoteLineId',
        'quantity' => 'getQuantity',
        'unit_rates' => 'getUnitRates',
        'line_rates' => 'getLineRates'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['line_id'] = isset($data['line_id']) ? $data['line_id'] : null;
        $this->container['item_id'] = isset($data['item_id']) ? $data['item_id'] : null;
        $this->container['quote_line_id'] = isset($data['quote_line_id']) ? $data['quote_line_id'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['unit_rates'] = isset($data['unit_rates']) ? $data['unit_rates'] : null;
        $this->container['line_rates'] = isset($data['line_rates']) ? $data['line_rates'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets line_id
     *
     * @return string|null
     */
    public function getLineId()
    {
        return $this->container['line_id'];
    }

    /**
     * Sets line_id
     *
     * @param string|null $line_id line_id
     *
     * @return $this
     */
    public function setLineId($line_id)
    {
        $this->container['line_id'] = $line_id;

        return $this;
    }

    /**
     * Gets item_id
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     *
     * @param string|null $item_id item_id
     *
     * @return $this
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets quote_line_id
     *
     * @return string|null
     */
    public function getQuoteLineId()
    {
        return $this->container['quote_line_id'];
    }

    /**
     * Sets quote_line_id
     *
     * @param string|null $quote_line_id quote_line_id
     *
     * @return $this
     */
    public function setQuoteLineId($quote_line_id)
    {
        $this->container['quote_line_id'] = $quote_line_id;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int|null $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets unit_rates
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CrossBorderQuotesResponseUnitRates|null
     */
    public function getUnitRates()
    {
        return $this->container['unit_rates'];
    }

    /**
     * Sets unit_rates
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CrossBorderQuotesResponseUnitRates|null $unit_rates unit_rates
     *
     * @return $this
     */
    public function setUnitRates($unit_rates)
    {
        $this->container['unit_rates'] = $unit_rates;

        return $this;
    }

    /**
     * Gets line_rates
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CrossBorderQuotesResponseLineRates|null
     */
    public function getLineRates()
    {
        return $this->container['line_rates'];
    }

    /**
     * Sets line_rates
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CrossBorderQuotesResponseLineRates|null $line_rates line_rates
     *
     * @return $this
     */
    public function setLineRates($line_rates)
    {
        $this->container['line_rates'] = $line_rates;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


