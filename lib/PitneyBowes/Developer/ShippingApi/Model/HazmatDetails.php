<?php
/**
 * HazmatDetails
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * HazmatDetails Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HazmatDetails implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'HazmatDetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'battery_details' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\BatteryDetails',
        'commodity_type' => 'string',
        'container_count' => 'int',
        'container_details' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ContainerDetails[]',
        'emergency_contact_number' => 'string',
        'hazmat_document_type' => 'string',
        'identical_containers' => 'bool',
        'offeror' => 'string',
        'packaging_option' => 'string',
        'signatory' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Signatory'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'battery_details' => null,
        'commodity_type' => null,
        'container_count' => 'int32',
        'container_details' => null,
        'emergency_contact_number' => null,
        'hazmat_document_type' => null,
        'identical_containers' => null,
        'offeror' => null,
        'packaging_option' => null,
        'signatory' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'battery_details' => 'batteryDetails',
        'commodity_type' => 'commodityType',
        'container_count' => 'containerCount',
        'container_details' => 'containerDetails',
        'emergency_contact_number' => 'emergencyContactNumber',
        'hazmat_document_type' => 'hazmatDocumentType',
        'identical_containers' => 'identicalContainers',
        'offeror' => 'offeror',
        'packaging_option' => 'packagingOption',
        'signatory' => 'signatory'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'battery_details' => 'setBatteryDetails',
        'commodity_type' => 'setCommodityType',
        'container_count' => 'setContainerCount',
        'container_details' => 'setContainerDetails',
        'emergency_contact_number' => 'setEmergencyContactNumber',
        'hazmat_document_type' => 'setHazmatDocumentType',
        'identical_containers' => 'setIdenticalContainers',
        'offeror' => 'setOfferor',
        'packaging_option' => 'setPackagingOption',
        'signatory' => 'setSignatory'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'battery_details' => 'getBatteryDetails',
        'commodity_type' => 'getCommodityType',
        'container_count' => 'getContainerCount',
        'container_details' => 'getContainerDetails',
        'emergency_contact_number' => 'getEmergencyContactNumber',
        'hazmat_document_type' => 'getHazmatDocumentType',
        'identical_containers' => 'getIdenticalContainers',
        'offeror' => 'getOfferor',
        'packaging_option' => 'getPackagingOption',
        'signatory' => 'getSignatory'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['battery_details'] = isset($data['battery_details']) ? $data['battery_details'] : null;
        $this->container['commodity_type'] = isset($data['commodity_type']) ? $data['commodity_type'] : null;
        $this->container['container_count'] = isset($data['container_count']) ? $data['container_count'] : null;
        $this->container['container_details'] = isset($data['container_details']) ? $data['container_details'] : null;
        $this->container['emergency_contact_number'] = isset($data['emergency_contact_number']) ? $data['emergency_contact_number'] : null;
        $this->container['hazmat_document_type'] = isset($data['hazmat_document_type']) ? $data['hazmat_document_type'] : null;
        $this->container['identical_containers'] = isset($data['identical_containers']) ? $data['identical_containers'] : null;
        $this->container['offeror'] = isset($data['offeror']) ? $data['offeror'] : null;
        $this->container['packaging_option'] = isset($data['packaging_option']) ? $data['packaging_option'] : null;
        $this->container['signatory'] = isset($data['signatory']) ? $data['signatory'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets battery_details
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\BatteryDetails|null
     */
    public function getBatteryDetails()
    {
        return $this->container['battery_details'];
    }

    /**
     * Sets battery_details
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\BatteryDetails|null $battery_details battery_details
     *
     * @return $this
     */
    public function setBatteryDetails($battery_details)
    {
        $this->container['battery_details'] = $battery_details;

        return $this;
    }

    /**
     * Gets commodity_type
     *
     * @return string|null
     */
    public function getCommodityType()
    {
        return $this->container['commodity_type'];
    }

    /**
     * Sets commodity_type
     *
     * @param string|null $commodity_type commodity_type
     *
     * @return $this
     */
    public function setCommodityType($commodity_type)
    {
        $this->container['commodity_type'] = $commodity_type;

        return $this;
    }

    /**
     * Gets container_count
     *
     * @return int|null
     */
    public function getContainerCount()
    {
        return $this->container['container_count'];
    }

    /**
     * Sets container_count
     *
     * @param int|null $container_count container_count
     *
     * @return $this
     */
    public function setContainerCount($container_count)
    {
        $this->container['container_count'] = $container_count;

        return $this;
    }

    /**
     * Gets container_details
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ContainerDetails[]|null
     */
    public function getContainerDetails()
    {
        return $this->container['container_details'];
    }

    /**
     * Sets container_details
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ContainerDetails[]|null $container_details container_details
     *
     * @return $this
     */
    public function setContainerDetails($container_details)
    {
        $this->container['container_details'] = $container_details;

        return $this;
    }

    /**
     * Gets emergency_contact_number
     *
     * @return string|null
     */
    public function getEmergencyContactNumber()
    {
        return $this->container['emergency_contact_number'];
    }

    /**
     * Sets emergency_contact_number
     *
     * @param string|null $emergency_contact_number emergency_contact_number
     *
     * @return $this
     */
    public function setEmergencyContactNumber($emergency_contact_number)
    {
        $this->container['emergency_contact_number'] = $emergency_contact_number;

        return $this;
    }

    /**
     * Gets hazmat_document_type
     *
     * @return string|null
     */
    public function getHazmatDocumentType()
    {
        return $this->container['hazmat_document_type'];
    }

    /**
     * Sets hazmat_document_type
     *
     * @param string|null $hazmat_document_type hazmat_document_type
     *
     * @return $this
     */
    public function setHazmatDocumentType($hazmat_document_type)
    {
        $this->container['hazmat_document_type'] = $hazmat_document_type;

        return $this;
    }

    /**
     * Gets identical_containers
     *
     * @return bool|null
     */
    public function getIdenticalContainers()
    {
        return $this->container['identical_containers'];
    }

    /**
     * Sets identical_containers
     *
     * @param bool|null $identical_containers identical_containers
     *
     * @return $this
     */
    public function setIdenticalContainers($identical_containers)
    {
        $this->container['identical_containers'] = $identical_containers;

        return $this;
    }

    /**
     * Gets offeror
     *
     * @return string|null
     */
    public function getOfferor()
    {
        return $this->container['offeror'];
    }

    /**
     * Sets offeror
     *
     * @param string|null $offeror offeror
     *
     * @return $this
     */
    public function setOfferor($offeror)
    {
        $this->container['offeror'] = $offeror;

        return $this;
    }

    /**
     * Gets packaging_option
     *
     * @return string|null
     */
    public function getPackagingOption()
    {
        return $this->container['packaging_option'];
    }

    /**
     * Sets packaging_option
     *
     * @param string|null $packaging_option packaging_option
     *
     * @return $this
     */
    public function setPackagingOption($packaging_option)
    {
        $this->container['packaging_option'] = $packaging_option;

        return $this;
    }

    /**
     * Gets signatory
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Signatory|null
     */
    public function getSignatory()
    {
        return $this->container['signatory'];
    }

    /**
     * Sets signatory
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Signatory|null $signatory signatory
     *
     * @return $this
     */
    public function setSignatory($signatory)
    {
        $this->container['signatory'] = $signatory;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


