<?php
/**
 * CarrierFacilityResponseCarrierFacilitySuggestions
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CarrierFacilityResponseCarrierFacilitySuggestions Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CarrierFacilityResponseCarrierFacilitySuggestions implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CarrierFacilityResponse_carrierFacilitySuggestions';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'address' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address',
        'carrier_facility_attributes' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierFacilityResponseCarrierFacilityOptions[]',
        'facility_hours' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierFacilityResponseFacilityHours[]',
        'facility_parking' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'address' => null,
        'carrier_facility_attributes' => null,
        'facility_hours' => null,
        'facility_parking' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address' => 'address',
        'carrier_facility_attributes' => 'carrierFacilityAttributes',
        'facility_hours' => 'facilityHours',
        'facility_parking' => 'facilityParking'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address' => 'setAddress',
        'carrier_facility_attributes' => 'setCarrierFacilityAttributes',
        'facility_hours' => 'setFacilityHours',
        'facility_parking' => 'setFacilityParking'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address' => 'getAddress',
        'carrier_facility_attributes' => 'getCarrierFacilityAttributes',
        'facility_hours' => 'getFacilityHours',
        'facility_parking' => 'getFacilityParking'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['carrier_facility_attributes'] = isset($data['carrier_facility_attributes']) ? $data['carrier_facility_attributes'] : null;
        $this->container['facility_hours'] = isset($data['facility_hours']) ? $data['facility_hours'] : null;
        $this->container['facility_parking'] = isset($data['facility_parking']) ? $data['facility_parking'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Address|null $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets carrier_facility_attributes
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierFacilityResponseCarrierFacilityOptions[]|null
     */
    public function getCarrierFacilityAttributes()
    {
        return $this->container['carrier_facility_attributes'];
    }

    /**
     * Sets carrier_facility_attributes
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierFacilityResponseCarrierFacilityOptions[]|null $carrier_facility_attributes carrier_facility_attributes
     *
     * @return $this
     */
    public function setCarrierFacilityAttributes($carrier_facility_attributes)
    {
        $this->container['carrier_facility_attributes'] = $carrier_facility_attributes;

        return $this;
    }

    /**
     * Gets facility_hours
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierFacilityResponseFacilityHours[]|null
     */
    public function getFacilityHours()
    {
        return $this->container['facility_hours'];
    }

    /**
     * Sets facility_hours
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\CarrierFacilityResponseFacilityHours[]|null $facility_hours facility_hours
     *
     * @return $this
     */
    public function setFacilityHours($facility_hours)
    {
        $this->container['facility_hours'] = $facility_hours;

        return $this;
    }

    /**
     * Gets facility_parking
     *
     * @return string|null
     */
    public function getFacilityParking()
    {
        return $this->container['facility_parking'];
    }

    /**
     * Sets facility_parking
     *
     * @param string|null $facility_parking facility_parking
     *
     * @return $this
     */
    public function setFacilityParking($facility_parking)
    {
        $this->container['facility_parking'] = $facility_parking;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


