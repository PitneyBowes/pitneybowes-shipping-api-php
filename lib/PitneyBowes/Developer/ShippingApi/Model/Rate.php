<?php
/**
 * Rate
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Rate Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Rate implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Rate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'alternate_base_charge' => 'float',
        'alternate_total_charge' => 'float',
        'base_charge' => 'float',
        'base_charge_taxes' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Tax[]',
        'carrier' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Carrier',
        'currency_code' => 'string',
        'delivery_commitment' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\DeliveryCommitment',
        'destination_zone' => 'float',
        'dimensional_weight' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ParcelWeight',
        'discounts' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Discount[]',
        'induction_postal_code' => 'string',
        'parcel_type' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ParcelType',
        'rate_type_id' => 'string',
        'service_id' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Services',
        'special_services' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\SpecialService[]',
        'surcharges' => '\OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Surcharge[]',
        'total_carrier_charge' => 'float',
        'total_tax_amount' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'alternate_base_charge' => null,
        'alternate_total_charge' => null,
        'base_charge' => null,
        'base_charge_taxes' => null,
        'carrier' => null,
        'currency_code' => null,
        'delivery_commitment' => null,
        'destination_zone' => null,
        'dimensional_weight' => null,
        'discounts' => null,
        'induction_postal_code' => null,
        'parcel_type' => null,
        'rate_type_id' => null,
        'service_id' => null,
        'special_services' => null,
        'surcharges' => null,
        'total_carrier_charge' => null,
        'total_tax_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'alternate_base_charge' => 'alternateBaseCharge',
        'alternate_total_charge' => 'alternateTotalCharge',
        'base_charge' => 'baseCharge',
        'base_charge_taxes' => 'baseChargeTaxes',
        'carrier' => 'carrier',
        'currency_code' => 'currencyCode',
        'delivery_commitment' => 'deliveryCommitment',
        'destination_zone' => 'destinationZone',
        'dimensional_weight' => 'dimensionalWeight',
        'discounts' => 'discounts',
        'induction_postal_code' => 'inductionPostalCode',
        'parcel_type' => 'parcelType',
        'rate_type_id' => 'rateTypeId',
        'service_id' => 'serviceId',
        'special_services' => 'specialServices',
        'surcharges' => 'surcharges',
        'total_carrier_charge' => 'totalCarrierCharge',
        'total_tax_amount' => 'totalTaxAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'alternate_base_charge' => 'setAlternateBaseCharge',
        'alternate_total_charge' => 'setAlternateTotalCharge',
        'base_charge' => 'setBaseCharge',
        'base_charge_taxes' => 'setBaseChargeTaxes',
        'carrier' => 'setCarrier',
        'currency_code' => 'setCurrencyCode',
        'delivery_commitment' => 'setDeliveryCommitment',
        'destination_zone' => 'setDestinationZone',
        'dimensional_weight' => 'setDimensionalWeight',
        'discounts' => 'setDiscounts',
        'induction_postal_code' => 'setInductionPostalCode',
        'parcel_type' => 'setParcelType',
        'rate_type_id' => 'setRateTypeId',
        'service_id' => 'setServiceId',
        'special_services' => 'setSpecialServices',
        'surcharges' => 'setSurcharges',
        'total_carrier_charge' => 'setTotalCarrierCharge',
        'total_tax_amount' => 'setTotalTaxAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'alternate_base_charge' => 'getAlternateBaseCharge',
        'alternate_total_charge' => 'getAlternateTotalCharge',
        'base_charge' => 'getBaseCharge',
        'base_charge_taxes' => 'getBaseChargeTaxes',
        'carrier' => 'getCarrier',
        'currency_code' => 'getCurrencyCode',
        'delivery_commitment' => 'getDeliveryCommitment',
        'destination_zone' => 'getDestinationZone',
        'dimensional_weight' => 'getDimensionalWeight',
        'discounts' => 'getDiscounts',
        'induction_postal_code' => 'getInductionPostalCode',
        'parcel_type' => 'getParcelType',
        'rate_type_id' => 'getRateTypeId',
        'service_id' => 'getServiceId',
        'special_services' => 'getSpecialServices',
        'surcharges' => 'getSurcharges',
        'total_carrier_charge' => 'getTotalCarrierCharge',
        'total_tax_amount' => 'getTotalTaxAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['alternate_base_charge'] = isset($data['alternate_base_charge']) ? $data['alternate_base_charge'] : null;
        $this->container['alternate_total_charge'] = isset($data['alternate_total_charge']) ? $data['alternate_total_charge'] : null;
        $this->container['base_charge'] = isset($data['base_charge']) ? $data['base_charge'] : null;
        $this->container['base_charge_taxes'] = isset($data['base_charge_taxes']) ? $data['base_charge_taxes'] : null;
        $this->container['carrier'] = isset($data['carrier']) ? $data['carrier'] : null;
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        $this->container['delivery_commitment'] = isset($data['delivery_commitment']) ? $data['delivery_commitment'] : null;
        $this->container['destination_zone'] = isset($data['destination_zone']) ? $data['destination_zone'] : null;
        $this->container['dimensional_weight'] = isset($data['dimensional_weight']) ? $data['dimensional_weight'] : null;
        $this->container['discounts'] = isset($data['discounts']) ? $data['discounts'] : null;
        $this->container['induction_postal_code'] = isset($data['induction_postal_code']) ? $data['induction_postal_code'] : null;
        $this->container['parcel_type'] = isset($data['parcel_type']) ? $data['parcel_type'] : null;
        $this->container['rate_type_id'] = isset($data['rate_type_id']) ? $data['rate_type_id'] : null;
        $this->container['service_id'] = isset($data['service_id']) ? $data['service_id'] : null;
        $this->container['special_services'] = isset($data['special_services']) ? $data['special_services'] : null;
        $this->container['surcharges'] = isset($data['surcharges']) ? $data['surcharges'] : null;
        $this->container['total_carrier_charge'] = isset($data['total_carrier_charge']) ? $data['total_carrier_charge'] : null;
        $this->container['total_tax_amount'] = isset($data['total_tax_amount']) ? $data['total_tax_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['carrier'] === null) {
            $invalidProperties[] = "'carrier' can't be null";
        }
        if ($this->container['parcel_type'] === null) {
            $invalidProperties[] = "'parcel_type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets alternate_base_charge
     *
     * @return float|null
     */
    public function getAlternateBaseCharge()
    {
        return $this->container['alternate_base_charge'];
    }

    /**
     * Sets alternate_base_charge
     *
     * @param float|null $alternate_base_charge alternate_base_charge
     *
     * @return $this
     */
    public function setAlternateBaseCharge($alternate_base_charge)
    {
        $this->container['alternate_base_charge'] = $alternate_base_charge;

        return $this;
    }

    /**
     * Gets alternate_total_charge
     *
     * @return float|null
     */
    public function getAlternateTotalCharge()
    {
        return $this->container['alternate_total_charge'];
    }

    /**
     * Sets alternate_total_charge
     *
     * @param float|null $alternate_total_charge alternate_total_charge
     *
     * @return $this
     */
    public function setAlternateTotalCharge($alternate_total_charge)
    {
        $this->container['alternate_total_charge'] = $alternate_total_charge;

        return $this;
    }

    /**
     * Gets base_charge
     *
     * @return float|null
     */
    public function getBaseCharge()
    {
        return $this->container['base_charge'];
    }

    /**
     * Sets base_charge
     *
     * @param float|null $base_charge base_charge
     *
     * @return $this
     */
    public function setBaseCharge($base_charge)
    {
        $this->container['base_charge'] = $base_charge;

        return $this;
    }

    /**
     * Gets base_charge_taxes
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Tax[]|null
     */
    public function getBaseChargeTaxes()
    {
        return $this->container['base_charge_taxes'];
    }

    /**
     * Sets base_charge_taxes
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Tax[]|null $base_charge_taxes base_charge_taxes
     *
     * @return $this
     */
    public function setBaseChargeTaxes($base_charge_taxes)
    {
        $this->container['base_charge_taxes'] = $base_charge_taxes;

        return $this;
    }

    /**
     * Gets carrier
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Carrier
     */
    public function getCarrier()
    {
        return $this->container['carrier'];
    }

    /**
     * Sets carrier
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Carrier $carrier carrier
     *
     * @return $this
     */
    public function setCarrier($carrier)
    {
        $this->container['carrier'] = $carrier;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string|null
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string|null $currency_code ISO-4217
     *
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets delivery_commitment
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\DeliveryCommitment|null
     */
    public function getDeliveryCommitment()
    {
        return $this->container['delivery_commitment'];
    }

    /**
     * Sets delivery_commitment
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\DeliveryCommitment|null $delivery_commitment delivery_commitment
     *
     * @return $this
     */
    public function setDeliveryCommitment($delivery_commitment)
    {
        $this->container['delivery_commitment'] = $delivery_commitment;

        return $this;
    }

    /**
     * Gets destination_zone
     *
     * @return float|null
     */
    public function getDestinationZone()
    {
        return $this->container['destination_zone'];
    }

    /**
     * Sets destination_zone
     *
     * @param float|null $destination_zone destination_zone
     *
     * @return $this
     */
    public function setDestinationZone($destination_zone)
    {
        $this->container['destination_zone'] = $destination_zone;

        return $this;
    }

    /**
     * Gets dimensional_weight
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ParcelWeight|null
     */
    public function getDimensionalWeight()
    {
        return $this->container['dimensional_weight'];
    }

    /**
     * Sets dimensional_weight
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ParcelWeight|null $dimensional_weight dimensional_weight
     *
     * @return $this
     */
    public function setDimensionalWeight($dimensional_weight)
    {
        $this->container['dimensional_weight'] = $dimensional_weight;

        return $this;
    }

    /**
     * Gets discounts
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Discount[]|null
     */
    public function getDiscounts()
    {
        return $this->container['discounts'];
    }

    /**
     * Sets discounts
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Discount[]|null $discounts discounts
     *
     * @return $this
     */
    public function setDiscounts($discounts)
    {
        $this->container['discounts'] = $discounts;

        return $this;
    }

    /**
     * Gets induction_postal_code
     *
     * @return string|null
     */
    public function getInductionPostalCode()
    {
        return $this->container['induction_postal_code'];
    }

    /**
     * Sets induction_postal_code
     *
     * @param string|null $induction_postal_code induction_postal_code
     *
     * @return $this
     */
    public function setInductionPostalCode($induction_postal_code)
    {
        $this->container['induction_postal_code'] = $induction_postal_code;

        return $this;
    }

    /**
     * Gets parcel_type
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ParcelType
     */
    public function getParcelType()
    {
        return $this->container['parcel_type'];
    }

    /**
     * Sets parcel_type
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\ParcelType $parcel_type parcel_type
     *
     * @return $this
     */
    public function setParcelType($parcel_type)
    {
        $this->container['parcel_type'] = $parcel_type;

        return $this;
    }

    /**
     * Gets rate_type_id
     *
     * @return string|null
     */
    public function getRateTypeId()
    {
        return $this->container['rate_type_id'];
    }

    /**
     * Sets rate_type_id
     *
     * @param string|null $rate_type_id rate_type_id
     *
     * @return $this
     */
    public function setRateTypeId($rate_type_id)
    {
        $this->container['rate_type_id'] = $rate_type_id;

        return $this;
    }

    /**
     * Gets service_id
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Services|null
     */
    public function getServiceId()
    {
        return $this->container['service_id'];
    }

    /**
     * Sets service_id
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Services|null $service_id service_id
     *
     * @return $this
     */
    public function setServiceId($service_id)
    {
        $this->container['service_id'] = $service_id;

        return $this;
    }

    /**
     * Gets special_services
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\SpecialService[]|null
     */
    public function getSpecialServices()
    {
        return $this->container['special_services'];
    }

    /**
     * Sets special_services
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\SpecialService[]|null $special_services special_services
     *
     * @return $this
     */
    public function setSpecialServices($special_services)
    {
        $this->container['special_services'] = $special_services;

        return $this;
    }

    /**
     * Gets surcharges
     *
     * @return \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Surcharge[]|null
     */
    public function getSurcharges()
    {
        return $this->container['surcharges'];
    }

    /**
     * Sets surcharges
     *
     * @param \OpenAPI\Client\PitneyBowes.Developer.ShippingApi.Model\Surcharge[]|null $surcharges surcharges
     *
     * @return $this
     */
    public function setSurcharges($surcharges)
    {
        $this->container['surcharges'] = $surcharges;

        return $this;
    }

    /**
     * Gets total_carrier_charge
     *
     * @return float|null
     */
    public function getTotalCarrierCharge()
    {
        return $this->container['total_carrier_charge'];
    }

    /**
     * Sets total_carrier_charge
     *
     * @param float|null $total_carrier_charge total_carrier_charge
     *
     * @return $this
     */
    public function setTotalCarrierCharge($total_carrier_charge)
    {
        $this->container['total_carrier_charge'] = $total_carrier_charge;

        return $this;
    }

    /**
     * Gets total_tax_amount
     *
     * @return float|null
     */
    public function getTotalTaxAmount()
    {
        return $this->container['total_tax_amount'];
    }

    /**
     * Sets total_tax_amount
     *
     * @param float|null $total_tax_amount total_tax_amount
     *
     * @return $this
     */
    public function setTotalTaxAmount($total_tax_amount)
    {
        $this->container['total_tax_amount'] = $total_tax_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


