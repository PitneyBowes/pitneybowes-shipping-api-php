<?php
/**
 * SpecialServicesRule
 *
 * PHP version 5
 *
 * @category Class
 * @package  pitneybowesShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shipping API
 *
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace pitneybowesShipping\shippingApi.model;

use \ArrayAccess;
use \pitneybowesShipping\ObjectSerializer;

/**
 * SpecialServicesRule Class Doc Comment
 *
 * @category Class
 * @package  pitneybowesShipping
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SpecialServicesRule implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SpecialServicesRule';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'special_service_id' => '\pitneybowesShipping\shippingApi.model\SpecialServiceCodes',
        'branded_name' => 'string',
        'category_id' => 'string',
        'category_name' => 'string',
        'trackable' => 'bool',
        'input_parameter_rules' => '\pitneybowesShipping\shippingApi.model\ServicesParameterRule[]',
        'prerequisite_rules' => '\pitneybowesShipping\shippingApi.model\PrerequisiteRules[]',
        'incompatible_special_services' => '\pitneybowesShipping\shippingApi.model\SpecialServiceCodes'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'special_service_id' => null,
        'branded_name' => null,
        'category_id' => null,
        'category_name' => null,
        'trackable' => null,
        'input_parameter_rules' => null,
        'prerequisite_rules' => null,
        'incompatible_special_services' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'special_service_id' => 'specialServiceId',
        'branded_name' => 'brandedName',
        'category_id' => 'categoryId',
        'category_name' => 'categoryName',
        'trackable' => 'trackable',
        'input_parameter_rules' => 'inputParameterRules',
        'prerequisite_rules' => 'prerequisiteRules',
        'incompatible_special_services' => 'incompatibleSpecialServices'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'special_service_id' => 'setSpecialServiceId',
        'branded_name' => 'setBrandedName',
        'category_id' => 'setCategoryId',
        'category_name' => 'setCategoryName',
        'trackable' => 'setTrackable',
        'input_parameter_rules' => 'setInputParameterRules',
        'prerequisite_rules' => 'setPrerequisiteRules',
        'incompatible_special_services' => 'setIncompatibleSpecialServices'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'special_service_id' => 'getSpecialServiceId',
        'branded_name' => 'getBrandedName',
        'category_id' => 'getCategoryId',
        'category_name' => 'getCategoryName',
        'trackable' => 'getTrackable',
        'input_parameter_rules' => 'getInputParameterRules',
        'prerequisite_rules' => 'getPrerequisiteRules',
        'incompatible_special_services' => 'getIncompatibleSpecialServices'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['special_service_id'] = isset($data['special_service_id']) ? $data['special_service_id'] : null;
        $this->container['branded_name'] = isset($data['branded_name']) ? $data['branded_name'] : null;
        $this->container['category_id'] = isset($data['category_id']) ? $data['category_id'] : null;
        $this->container['category_name'] = isset($data['category_name']) ? $data['category_name'] : null;
        $this->container['trackable'] = isset($data['trackable']) ? $data['trackable'] : null;
        $this->container['input_parameter_rules'] = isset($data['input_parameter_rules']) ? $data['input_parameter_rules'] : null;
        $this->container['prerequisite_rules'] = isset($data['prerequisite_rules']) ? $data['prerequisite_rules'] : null;
        $this->container['incompatible_special_services'] = isset($data['incompatible_special_services']) ? $data['incompatible_special_services'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets special_service_id
     *
     * @return \pitneybowesShipping\shippingApi.model\SpecialServiceCodes|null
     */
    public function getSpecialServiceId()
    {
        return $this->container['special_service_id'];
    }

    /**
     * Sets special_service_id
     *
     * @param \pitneybowesShipping\shippingApi.model\SpecialServiceCodes|null $special_service_id special_service_id
     *
     * @return $this
     */
    public function setSpecialServiceId($special_service_id)
    {
        $this->container['special_service_id'] = $special_service_id;

        return $this;
    }

    /**
     * Gets branded_name
     *
     * @return string|null
     */
    public function getBrandedName()
    {
        return $this->container['branded_name'];
    }

    /**
     * Sets branded_name
     *
     * @param string|null $branded_name branded_name
     *
     * @return $this
     */
    public function setBrandedName($branded_name)
    {
        $this->container['branded_name'] = $branded_name;

        return $this;
    }

    /**
     * Gets category_id
     *
     * @return string|null
     */
    public function getCategoryId()
    {
        return $this->container['category_id'];
    }

    /**
     * Sets category_id
     *
     * @param string|null $category_id category_id
     *
     * @return $this
     */
    public function setCategoryId($category_id)
    {
        $this->container['category_id'] = $category_id;

        return $this;
    }

    /**
     * Gets category_name
     *
     * @return string|null
     */
    public function getCategoryName()
    {
        return $this->container['category_name'];
    }

    /**
     * Sets category_name
     *
     * @param string|null $category_name category_name
     *
     * @return $this
     */
    public function setCategoryName($category_name)
    {
        $this->container['category_name'] = $category_name;

        return $this;
    }

    /**
     * Gets trackable
     *
     * @return bool|null
     */
    public function getTrackable()
    {
        return $this->container['trackable'];
    }

    /**
     * Sets trackable
     *
     * @param bool|null $trackable trackable
     *
     * @return $this
     */
    public function setTrackable($trackable)
    {
        $this->container['trackable'] = $trackable;

        return $this;
    }

    /**
     * Gets input_parameter_rules
     *
     * @return \pitneybowesShipping\shippingApi.model\ServicesParameterRule[]|null
     */
    public function getInputParameterRules()
    {
        return $this->container['input_parameter_rules'];
    }

    /**
     * Sets input_parameter_rules
     *
     * @param \pitneybowesShipping\shippingApi.model\ServicesParameterRule[]|null $input_parameter_rules input_parameter_rules
     *
     * @return $this
     */
    public function setInputParameterRules($input_parameter_rules)
    {
        $this->container['input_parameter_rules'] = $input_parameter_rules;

        return $this;
    }

    /**
     * Gets prerequisite_rules
     *
     * @return \pitneybowesShipping\shippingApi.model\PrerequisiteRules[]|null
     */
    public function getPrerequisiteRules()
    {
        return $this->container['prerequisite_rules'];
    }

    /**
     * Sets prerequisite_rules
     *
     * @param \pitneybowesShipping\shippingApi.model\PrerequisiteRules[]|null $prerequisite_rules prerequisite_rules
     *
     * @return $this
     */
    public function setPrerequisiteRules($prerequisite_rules)
    {
        $this->container['prerequisite_rules'] = $prerequisite_rules;

        return $this;
    }

    /**
     * Gets incompatible_special_services
     *
     * @return \pitneybowesShipping\shippingApi.model\SpecialServiceCodes|null
     */
    public function getIncompatibleSpecialServices()
    {
        return $this->container['incompatible_special_services'];
    }

    /**
     * Sets incompatible_special_services
     *
     * @param \pitneybowesShipping\shippingApi.model\SpecialServiceCodes|null $incompatible_special_services incompatible_special_services
     *
     * @return $this
     */
    public function setIncompatibleSpecialServices($incompatible_special_services)
    {
        $this->container['incompatible_special_services'] = $incompatible_special_services;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


